{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAY,EAAM,QAAQ,CA+BhC,SAAS,EAAe,CAAG,EACzB,MAAO,CAAC,EAAI,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,GACvC,CA/BA,EAAM,gBAAgB,CAAC,QAEvB,SAAmB,CAAC,EAClB,IAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,EAAc,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,EAAA,I,A,W,M,A,U,wI,IACd,EAAa,EAAE,MAAM,CAAC,SAAS,CAErC,EAAQ,IAAI,CAAC,SAAC,CAAA,CAAG,CAAjB,EACE,OAAQ,GACN,IAAK,OACH,OAAO,EAAE,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,SAAS,CACtE,KAAK,WACH,OAAO,EAAE,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,SAAS,CACtE,KAAK,MACH,MAAO,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAG,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,SAAS,AAC5D,KAAK,SACH,OACE,EAAe,EAAE,QAAQ,CAAC,EAAE,CAAC,SAAS,EACtC,EAAe,EAAE,QAAQ,CAAC,EAAE,CAAC,SAAS,CAE5C,CACF,GAEA,EAAM,SAAS,CAAG,GAElB,EAAQ,OAAO,CAAC,SAAC,CAAjB,EACE,EAAM,MAAM,CAAC,EACf,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\nvar thead = document.querySelector(\"thead\");\nvar tbody = document.querySelector(\"tbody\");\nvar tbodyRows = tbody.children;\nthead.addEventListener(\"click\", sortTable);\nfunction sortTable(e) {\n    var rowsArr = _to_consumable_array(tbodyRows);\n    var targetText = e.target.innerText;\n    rowsArr.sort(function(a, b) {\n        switch(targetText){\n            case \"Name\":\n                return a.children[0].innerText.localeCompare(b.children[0].innerText);\n            case \"Position\":\n                return a.children[1].innerText.localeCompare(b.children[1].innerText);\n            case \"Age\":\n                return +a.children[2].innerText - +b.children[2].innerText;\n            case \"Salary\":\n                return salaryToNumber(a.children[3].innerText) - salaryToNumber(b.children[3].innerText);\n        }\n    });\n    tbody.innerHTML = \"\";\n    rowsArr.forEach(function(element) {\n        tbody.append(element);\n    });\n}\nfunction salaryToNumber(str) {\n    return +str.slice(1).split(\",\").join(\"\");\n}\n\n//# sourceMappingURL=index.0d8e1ee1.js.map\n","'use strict';\n\n// write code here\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst tbodyRows = tbody.children;\n\nthead.addEventListener('click', sortTable);\n\nfunction sortTable(e) {\n  const rowsArr = [...tbodyRows];\n  const targetText = e.target.innerText;\n\n  rowsArr.sort((a, b) => {\n    switch (targetText) {\n      case 'Name':\n        return a.children[0].innerText.localeCompare(b.children[0].innerText);\n      case 'Position':\n        return a.children[1].innerText.localeCompare(b.children[1].innerText);\n      case 'Age':\n        return +a.children[2].innerText - +b.children[2].innerText;\n      case 'Salary':\n        return (\n          salaryToNumber(a.children[3].innerText) -\n          salaryToNumber(b.children[3].innerText)\n        );\n    }\n  });\n\n  tbody.innerHTML = '';\n\n  rowsArr.forEach((element) => {\n    tbody.append(element);\n  });\n}\n\nfunction salaryToNumber(str) {\n  return +str.slice(1).split(',').join('');\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","thead","document","querySelector","tbody","tbodyRows","children","salaryToNumber","str","slice","split","join","addEventListener","e","rowsArr","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","constructor","name","test","_non_iterable_spread","TypeError","targetText","target","innerText","sort","a","b","localeCompare","innerHTML","forEach","element","append"],"version":3,"file":"index.0d8e1ee1.js.map"}